{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Oil Shell Script",
	"scopeName": "source.shell.oilshell",
	"patterns": [
		{
			"include": "#assign"
		},
		{
			"include": "#function-definition"
		},
		{
			"include": "#control"
		},
		{
			"include": "#subexpression"
		},
		{
			"include": "#block"
		},
		{
			"include": "source.shell"
		}
	],
	"repository": {
		"constant": {
			"patterns": [
				{
					"include": "source.python#number"
				},
				{
					"include": "source.shell#string"
				}
			]			
		},
		"expression": {
			"patterns": [
				{
					"match": "(in|not|is)",
					"name": "keyword.shell"
				},
				{
					"match": "(true|false)",
					"name": "constant.language.oil"
				},
				{
					"match": "(~==|===|>=|<=|<|>|==|!=|!~~|~~|~|and|or)",
					"name": "keyword.operator.comparison.shell.oil"
				},
				{
					"match": "[a-zA-Z_][a-zA-Z0-9_]*",
					"name": "variable.other.normal.shell"
				},
				{
					"include": "#constant"
				},
				{
					"include": "source.js#regex"
				},
				{
					"match": ",",
					"name": "punctuation.comma.oil"
				},
				{
					"begin": "(%|\\$|@)\\(",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.oil"
						}
					},
					"patterns":[
						{
							"include": "$self"
						}
					]
				}
			]
		},
		"assign": {
			"patterns": [
				{
					"begin": "\\b(setvar|const|var)\\s+([_[:alpha:]][_[:alnum:]]*)\\s*(=)",
					"beginCaptures": {
						"1": { 
							"name": "storage.type.oil"
						},
						"2": {
							"name":"variable.other.normal.shell"
						},
						"3": {
							"name":"keyword.operator.assignment.shell"
						}
					},
					"end": "\\n",
					"patterns": [
						{
							"include": "#expression"
						}
					]
				}
			]
		},
		"subexpression": {
			"patterns": [
				{
					"begin": "(\\$)\\[",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.oil"
						}
					},
					"end":"\\]",
					"patterns": [
						{
							"include": "#expression"
						}
					]
				}
			]
		},
		"control": {
			"patterns": [
				{
					"begin": "(?<!\\$)\\b(if|while|for|else)\\s*(\\()",
					"end": "\\{",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.shell"
						}
					},
					"patterns":[
						 {
							"include": "#expression"
						}
					]
				},
				{
					"begin": "(?<!\\$)\\b(if|while|for|else)\\s+(?=[^\\(\\{]+\\{)",
					"end": "(\\{)",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.shell"
						}
					},
					"endCaptures": {
						"1": {
							"name": "punctuation.section.braces.begin.oil"
						}
					},
					"patterns":[
						 {
							"include": "$self"
						}
					]
				}
			]
		},
		"block": {
			"patterns": [
				{
					"begin": "(?<!$)\\{",
					"end": "\\}",
					"beginCaptures": {
						"1": {
							"name": "punctuation.section.braces.begin.oil"
						}
					},
					"endCaptures": {
						"1": {
							"name": "punctuation.section.braces.end.oil"
						}
					},
					"patterns":[
						{
							"include": "$self"
						}
					]

				}
			]
		},
		"function-definition": {
			"patterns": [
				{
					"begin": "(?<=^|;|&|\\s)(proc)\\s+([^\\s\\\\]+)\\s*(\\()",
					"beginCaptures": {
						"1": {
							"name": "storage.type.function.shell"
						},
						"2": {
							"name": "entity.name.function.shell"
						},
						"3": {
							"name": "punctuation.definition.arguments.begin.shell"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.arguments.end.shell"
						}
					},
					"name": "meta.function.shell",
					"patterns": [
						{
							"include": "#expression"
						}
					]
				},
				{
					"begin": "(?<=^|;|&|\\s)(proc)\\s+([^\\s\\\\]+)\\s*",
					"beginCaptures": {
						"1": {
							"name": "storage.type.function.shell"
						},
						"2": {
							"name": "entity.name.function.shell"
						}
					},
					"end": ";|&|$",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.function.shell"
						}
					},
					"name": "meta.function.shell",
					"patterns": [
						{
							"include": "$self"
						}
					]
				}
			]
		}
	}
}
